{% import _self as menus %}

{#
We call a macro which calls itself to render the full tree.
@see http://twig.sensiolabs.org/doc/tags/macro.html
1. We use menu_name (see above) to create a CSS class name from it.
By doing so, every menu will get it's own specific class name so that
we avoid class clashes ang generate specific markup.
See https://www.drupal.org/node/2649076
#}

<div class="js-main-navigation transition duration-300 bg-white w-screen fixed top-0 bottom-0 scale-95 transform opacity-0 invisible origin-top-right left-0 right-0 flex flex-col transform z-50 lg:bg-transparent lg:relative lg:w-auto lg:top-0 lg:opacity-100 lg:visible lg:translate-x-4">
  <div class="flex py-2 w-full items-center justify-between px-5 lg:hidden">
    <a href="{{ path('<front>') }}" title="{{ 'Home'|t }}" rel="home">
      <img class="w-12 h-12" src="/{{ directory }}/logo.svg" alt="{{ 'Home'|t }}" />
    </a>
    <button class="js-menu-main-close flex items-center font-bold transform translate-x-1 lg:hidden" aria-label="{{ 'Close main menu'|t }}">
      {{ 'Close'|t }}
      <svg class="w-6 ml-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
</div>

{{ menus.menu_links(items, attributes, 0, menu_name) }}

{% macro menu_links(items, attributes, menu_level, menu_name) %}
  {%
    set menu_classes = [
      'flex',
      'flex-col',
      'lg:flex-row',
      'lg:px-0'
    ]
  %}


  {% import _self as menus %}
    {%
      set submenu_one_classes = [
        'js-submenu',
        'hidden',
        'relative',
        'flex',
        'flex-col',
        'transform',
        'transition',
        'lg:group-hover:flex',
        'lg:bg-white',
        'lg:w-64',
        'lg:absolute',
        'lg:top-full',
      ]
    %}

    {%
      set submenu_two_classes = [
        'js-submenu',
        'hidden',
        'relative',
        'flex',
        'flex-col',
        'transform',
        'transition',
        'lg:group-hover:flex',
        'lg:bg-white',
        'lg:w-64',
      ]
    %}

    {% if items %}
      {% if menu_level == 0 %}
        <ul{{ attributes.addClass(menu_classes) }}>
      {% elseif menu_level == 1 %}
        <ul{{ attributes.removeClass(menu_classes).addClass(submenu_one_classes) }}>
      {% else %}
        <ul{{ attributes.removeClass(menu_classes).removeClass(submenu_one_classes).addClass(submenu_two_classes) }}>
    {% endif %}

    {% for item in items %}
      {%
        set item_classes = [
          'flex',
          'relative',
          item.in_active_trail ? 'underline',
          item.below ? 'flex-col group',
          'lg:inline-flex',
        ]
      %}

      {%
        set link_classes = [
          'inline-flex',
          'px-5',
          'py-3',
          'font-bold',
          'h-12',
          'text-base',
          'hover:underline',
          'focus:underline',
          'w-full',
          item.in_active_trail ? 'underline',
          item.below ? 'lg:pr-0',
          menu_level == 0 ? 'text-gray-900' : 'text-gray-700',
          menu_level == 1 ? 'pl-8',
          menu_level == 2 ? 'pl-10',
        ]
      %}

      <li {{ item.attributes.addClass(item_classes) }}>
        {% if item.below %}
        <div class="flex justify-between">
          {% endif %}
          {{
          link (
              item.title,
              item.url,
              item.attributes.removeClass(item_classes).removeClass(button_classes).addClass(link_classes)
            )
          }}

          {% if item.below %}
            {# add arrow in sketches here #}
            <button class="js-submenu-toggle relative inline-flex items-center justify-center w-12 h-12 flex-shrink-0 text-gray-900 outline-none focus:outline-none lg:border-none" aria-expanded="false" aria-haspopup="menu" aria-label="{{ 'Submenu for: '|t }}{{ item.title }}">
              <svg class="transform transition w-5 h-5 pointer-events-none lg:rotate-90" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
          {% endif %}
          {% if item.below %}
        </div>
        {% endif %}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level + 1, menu_name) }}
        {% endif %}
      </li>
    {% endfor %}
  </ul>
  {% endif %}
  {% endmacro %}
</div>
